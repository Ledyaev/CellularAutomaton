@using Microsoft.AspNet.Identity
@using Resources
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title – приложение ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="/Content/@Html.Action("CurrentTheme", "Home")" rel="stylesheet">
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(Resource.ProjectName, "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Галерея", "Galery", "Automaton")</li>
                    <li>@Html.ActionLink("Комната", "UserAutomatons", "Automaton", new { id = User.Identity.GetUserId() }, null)</li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li><a id="myMessages" href="@Url.Action("MyMessages","Message")">Сообщения <span class="badge">@Html.Action("UnreadMessages","Account")</span></a></li>
                    }
                    <li>@Html.ActionLink("Новый автомат", "NewAutomaton", "Automaton")</li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resource.Theme<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink(Resource.Light, "ChangeTheme", "Home", new{ theme= "light.css" },null)</li>
                            <li>@Html.ActionLink(Resource.Dark, "ChangeTheme", "Home", new { theme = "dark.css" }, null)</li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resource.ChoseLang<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink(Resource.Russian, "ChangeCulture", "Home", new { lang = "ru" }, null)</li>
                            <li>@Html.ActionLink(Resource.English, "ChangeCulture", "Home", new { lang = "en" }, null)</li>
                        </ul>
                    </li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year – @Resource.ProjectName</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/signalR")
    @RenderSection("scripts", required: false)
    
    @if (User.Identity.IsAuthenticated)
    {
        <!--Ссылка на библиотеку SignalR -->
        <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Ссылка на автоматически сгенерированный скрипт хаба SignalR -->
        <script src="~/signalr/hubs"></script>
        <script src="~/Scripts/datetime-format.js"></script>
        <script>

    var chat = $.connection.chatHub;
    // Объявление функции, которая хаб вызывает при получении сообщений
    //chat.client.addMessage = function (name, message) {
    //    // Добавление сообщений на веб-страницу
    //    $('#chatroom ul').append('<li><strong>' + htmlEncode(name)
    //        + '</strong>: ' + htmlEncode(message) + '</li>');
    //};
    $.connection.hub.start().done(function () {

        $('#sendmessage').click(function () {
            // Вызываем у хаба метод Send
            chat.server.send("@User.Identity.Name", $('#hdUserName').val(), $('#messageInput').val());
            $('#messageInput').val('');
        });

        $('.message').click(function () {
            $(this).removeClass("panel-warning").addClass("panel-primary");
            chat.server.readMessage($("input",this).val());
        });

        // обработка логина
        $(document).ready(function () {
            chat.server.connect("@User.Identity.Name");
        });
    });



    chat.client.addMessage = function (name, message,id) {
        // Добавление сообщений на веб-страницу
        if ($("#hdUserName").val() == name) {
            var now = new Date();
            var formatedDate = now.format("dd.mm.yyyy HH:MM");
            var isOwnMessage = name == "@User.Identity.Name";
            $('#chatroom ').prepend('<div  class="message panel panel-' + (isOwnMessage ? "primary" : "warning") + '"><input id="messageId" type="hidden" value="' + id + '" /><div class="panel-heading">' + name + '<span class="pull-right">' + formatedDate + '</span></div><div class="panel-body">' + message + '</div></div>');
        }
    };


    chat.client.readMessages = function() {
        $(".message").removeClass("panel-warning").addClass("panel-primary");
    };

    chat.client.updateDialogs = function (name) {
        // Добавление сообщений на веб-страницу
        var li = $("#dialogs li[id=" + name + "]");
        if (li.length > 0) {
            var count = $("#dialogs li[id=" + name + "] span.badge").text();
            count = Number(count) + 1;
            $("#dialogs li[id=" + name + "] span.badge").text(count);
            li.remove();
            $("#dialogs ul").prepend(li);
        } else {
            $("#dialogs ul").prepend(' <li id="'+name+'"><a href="/Message/ShowDialog?userName='+name+'" >'+name+'<span class="badge">'+1+'</span></a></li>');
        }
    };

    chat.client.updateUnreadMessages = function (readMessagesCount) {
        if ($("#myMessages").length > 0) {
            var count = $("#myMessages span.badge").text();
            count = Number(count) + readMessagesCount;
            $("#myMessages span.badge").text(count);
        }
    };
    
    $.connection.hub.disconnected(function () {
        setTimeout(function () {
            $.connection.hub.start();
        }, 5000); // Restart connection after 5 seconds.
    });

    @*// Функция, вызываемая при подключении нового пользователя
    chat.client.onConnected = function (id, userName, allUsers) {

        $('#header').html('<h3>Добро пожаловать, ' + @User.Identity.Name + '</h3>');
    };*@
    // Открываем соединение

    // Кодирование тегов
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }


    $('#searchUser').click(function () {
        var name = $("#story").val();
        if (name != null) {
            if ($("li[id=" + name + "]").length > 0) {
                var ul = $("li[id=" + name + "]");
                $("#dialogs ul").empty();
                $("#dialogs ul").append(ul);
            } else {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetUser", "Account")",
                    data: "userName=" + $("#story").val(),
                    success: function (data) {
                        $("#dialogs ul").empty();
                        if (data == false)
                            $("#dialogs ul").append('<li class="alert alert-warning">Пользователя с таким именем не найдено.</li>');
                        else {
                            $("#dialogs ul").append('<li id="' + $("#story").val() + '"><a href="/Message/ShowDialog?userName=' + $("#story").val() + '" >' + $("#story").val() + '<span class="badge">0</span></a></li>');
                        }
                    }
                });
            }
        }
    });
        </script>
    }
</body>
</html>
