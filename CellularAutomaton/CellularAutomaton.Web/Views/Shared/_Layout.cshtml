@using Resources
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title – приложение ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="/Content/@Html.Action("CurrentTheme", "Home")" rel="stylesheet">
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(Resource.ProjectName, "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Домашняя страница", "Index", "Home")</li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li>@Html.ActionLink("О программе", "MyMessages", "Message")</li>
                    }
                    <li>@Html.ActionLink("Контакт", "Contact", "Home")</li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resource.Theme<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink(Resource.Light, "ChangeTheme", "Home", new{ theme= "light.css" },null)</li>
                            <li>@Html.ActionLink(Resource.Dark, "ChangeTheme", "Home", new { theme = "dark.css" }, null)</li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Resource.ChoseLang<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink(Resource.Russian, "ChangeCulture", "Home", new { lang = "ru" }, null)</li>
                            <li>@Html.ActionLink(Resource.English, "ChangeCulture", "Home", new { lang = "en" }, null)</li>
                        </ul>
                    </li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year – @Resource.ProjectName</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script>
    var chat = $.connection.chatHub;
    // Объявление функции, которая хаб вызывает при получении сообщений
    chat.client.addMessage = function (name, message) {
        // Добавление сообщений на веб-страницу
        $('#chatroom ul').append('<li><strong>' + htmlEncode(name)
            + '</strong>: ' + htmlEncode(message) + '</li>');
    };

    // Функция, вызываемая при подключении нового пользователя
    chat.client.onConnected = function (id, userName, allUsers) {
        // Добавление всех пользователей
        //for (i = 0; i < allUsers.length; i++) {
        //    AddUser(allUsers[i].ConnectionId, allUsers[i].Name);
        //}
    };

    // Добавляем нового пользователя
    chat.client.onNewUserConnected = function (id, name) {
    };

    // Удаляем пользователя
    chat.client.onUserDisconnected = function (id, userName) {
    };

    // Открываем соединение
    $.connection.hub.start().done(function () {
        
            chat.server.connect("@User.Identity.Name");
    });
    
    // Кодирование тегов
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
    </script>

</body>
</html>
